# http://www.scons.org/doc/production/HTML/scons-user.html
# This is: src/casm/SConscript

import os, glob
from glob import glob
from os.path import join

Import('env')

# build version
SConscript(['version/SConscript'], {'env':env})

# get source files
casm_lib_src_dir = [
  'clex', 'app', 'casm_io', 'casm_io/json_io', 'container', 'crystallography', 'symmetry', 
  'basis_set', 'clusterography', 'kspace', 'misc', 'strain', 'hull', 
  'phonon', 'monte_carlo', 'monte_carlo/grand_canonical', 'monte_carlo/canonical',
  'system', 'completer'
]

casm_lib_src = ['CASM_global_definitions.cc'] + [glob(join(x,'*.cc')) for x in casm_lib_src_dir]

#include path
candidates = [
  env['INCDIR'], 
  env.include_path(env['BOOST_PREFIX'], 'boost')
]
cpppath = [x for x in candidates if x is not None]

casm_lib_sobj = env.SharedObject(casm_lib_src, 
                                 CPPPATH=cpppath)
env['COMPILE_TARGETS'] = env['COMPILE_TARGETS'] + casm_lib_sobj
env['CASM_SOBJ'] = env['CASM_SOBJ'] + casm_lib_sobj

# qhull c code
include_qhull = join('..','..','include','casm','external','qhull','libqhull_r')
qhull_src = glob( join('external','qhull','libqhull_r','*.c'))
qhull_sobj = env.SharedObject(qhull_src, 
                              CPPPATH=include_qhull)
env['COMPILE_TARGETS'] = env['COMPILE_TARGETS'] + qhull_sobj
env['CASM_SOBJ'] = env['CASM_SOBJ'] + qhull_sobj

# qhull cpp code
include_qhullcpp = join('..','..','include','casm','external','qhull','libqhullcpp')
qhullcpp_src = glob( join('external','qhull','libqhullcpp','*.cpp'))
qhullcpp_sobj = env.SharedObject(qhullcpp_src, 
                                 CPPPATH=[include_qhull, include_qhullcpp])
env['COMPILE_TARGETS'] = env['COMPILE_TARGETS'] + qhullcpp_sobj
env['CASM_SOBJ'] = env['CASM_SOBJ'] + qhullcpp_sobj
